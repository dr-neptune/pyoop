#+TITLE: Automated Emails

* Design

An app that reads usernames, email addresses, and interests from an excel file and sends an email to each user with news feeds about the user's interests every morning.

* Objects

** ExcelFile
*** filepath
*** get_data()

** Email
*** Sender
*** Receiver
*** Subject
*** Body
*** send()

** NewsFeed
*** data
*** get()

* Program

#+BEGIN_SRC python :tangle newsfeed.py
# api key: 890603a55bfa47048e4490069ebee18c
import requests


class NewsFeed:
    """
    Represents multiple news titles and links as a string
    """
    base_url = "https://newsapi.org/v2/everything?"
    api_key = "890603a55bfa47048e4490069ebee18c"

    def __init__(self, interest, from_date, to_date, language):
        self.interest = interest
        self.from_date = from_date
        self.to_date = to_date
        self.language = language

    def construct_url(self):
        return self.base_url + \
            f"q={self.interest}" + \
            f"&from={self.from_date}" + \
            f"&to={self.to_date}" + \
            f"&language={self.language}" + \
            f"&apiKey={self.api_key}"

    def get(self):
        # construct URL
        url = construct_url()

        # get pages
        content = requests.get(url).json()

        # get page titles and urls
        articles = [i['title'] + '\n' +
                    i['url'] + '\n\n'
                    for i in content['articles']]

        return articles


# food_feed = NewsFeed("vegan food", "2021-05-02", "2021-05-03", "en")
# print(*food_feed.get())
#+END_SRC

#+BEGIN_SRC python :tangle email_file.py
import yagmail
import datetime
import pandas as pd
from newsfeed import NewsFeed

# get today and yesterday
today = datetime.datetime.now().strftime("%Y-%m-%d")
yesterday = (datetime.datetime.now() - datetime.timedelta(days=1)).strftime("%Y-%m-%d")

# instantiate a dataframe
df = pd.read_excel("people.xlsx")

# remove NA columns
df = df[df['name'].notna()]

# instantiate an emailer
email_out = yagmail.SMTP(user="",
                         password="")

# for each person in an xlsx file
# send an email with their personalized newsfeed
for index, row in df.iterrows():
    news_feed = NewsFeed(row['interest'], yesterday, today)

    print(f"Sending email to: {row['email']}\n")

    email_out.send(to=row['email'],
                   subject=f"Your {row['interest']} news for today!",
                   contents=f"Hi {row['name']}\nSee what's going on with {row['interest']} today.\n\n\n {''.join(news_feed.get())}")
#+END_SRC
