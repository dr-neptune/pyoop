#+TITLE: Math Painter

* App Overview

** Description
   A command line app that allows the user to draw a series of colored rectangles and squares onto a canvas by entering coordinates into the prompt.

** Objects
*** Canvas
**** generate_canvas()
**** add_shape()
**** make_image()
*** Shape
**** Rectangle
**** Square

* App Code

** Canvas Class

#+BEGIN_SRC python :tangle canvas.py
import numpy as np
from color_dict import *
from PIL import Image

class Canvas:
    def __init__(self, height, width, color):
        self.height = height
        self.width = width
        self.color = color
        self.base = np.zeros((self.height, self.width, 3), dtype = np.uint8)
    
    def generate_canvas(self):
        if get_color(self.color) != None:
            self.base[:] = [*get_color(self.color)]
        else:
            print("Error! Cannot generate canvas due to unspecified color.\nGenerating a black canvas as a default.")
            self.base

    def add_shape(self, x_start, x_end, y_start, y_end, color):
        self.base[y_start:y_end, x_start:x_end] = color

    def make_image(self, image_path):
        img = Image.fromarray(self.base, "RGB")
        img.save(image_path)
#+END_SRC

** Shape Classes

#+BEGIN_SRC python :tangle shape.py
from color_dict import *

class Shape:
    colors = {}
    def __init__(self, x, y, color):
        self.x = x
        self.y = y
        self.color = color

class Rectangle(Shape):
    def __init__(self, x, y, height, width, color, canvas):
        super().__init__(x, y, color)
        self.height = height
        self.width = width
        self.canvas = canvas

    def draw(self, canvas):
        canvas.add_shape(x_start = self.x,
                         x_end = self.x + self.width,
                         y_start = self.y,
                         y_end = self.y + self.height,
                         color = [*get_color(self.color)])
        return canvas

class Square(Rectangle):
    def __init__(self, x, y, side, color, canvas):
        super().__init__(x, y, side, side, color, canvas)
        self.side = side
        self.canvas = canvas

    def draw(self, canvas):
        canvas.add_shape(x_start = self.x,
                         x_end = self.x + self.side,
                         y_start = self.y,
                         y_end = self.y + self.side,
                         color = [*get_color(self.color)])
        return canvas    
#+END_SRC

** Main

We want a prompt:

- Enter canvas width
- Enter canvas height
- Enter canvas color

repeat until quit is entered:
- What would you like to draw (square (s) or rectangle (r))?
- Enter the x coordinate of the upper left corner of your shape:
- Enter the y coordinate of the upper left corner of your shape:
- Enter the width of your shape: 
- (if rectangle, not square): Enter the height of your rectangle:
- What color is your shape?


#+BEGIN_SRC python :tangle main.py
from canvas import Canvas
from shape import Square, Rectangle
from color_dict import *
from webbrowser import open
from os import path

# enter canvas information
c_h = int(input("Enter canvas height (px):\n"))
c_w = int(input("Enter canvas width (px):\n"))
c_c = input("Enter the canvas color:\n")

canvas = Canvas(c_h, c_w, c_c)
canvas.generate_canvas()

# repeat the shape input prompt until quit is entered
def prompt(canvas):
    def draw_loop(shape = ""):
        global canvas
        if not shape in ["r", "s", "q"]:
            print(f"Error: Unknown shape: {shape}")
            return
        if shape == "q":
            filename_out = input("Please enter a filename for your masterpiece (example: album_cover.png):\n")
            canvas.make_image(filename_out)
            open("file://" + path.realpath(filename_out))
            print(f"Be sure to check out your art! {filename_out}")
            return
        else:
            s_color = input("What color is your shape?\n")
            x_coord = int(input("Enter the x coordinate of the upper left corner of your shape:\n"))
            y_coord = int(input("Enter the y coordinate of the upper left corner of your shape:\n"))
            s_width = int(input("Enter the width of your shape:\n"))
            if shape == "r":
                s_height = int(input("Enter the height of your rectangle:\n"))
                rect = Rectangle(x_coord, y_coord, s_height, s_width, s_color, canvas)
                canvas = rect.draw(canvas)
            else: # shape is s
                square = Square(x_coord, y_coord, s_width, s_color, canvas)
                canvas = square.draw(canvas)
        shape_input = input("What would you like to draw? (square (s), rectangle (r), quit (q)):\n")
        draw_loop(shape_input)
    shape_input = input("What would you like to draw? (square (s), rectangle (r), quit (q)):\n")
    draw_loop(shape_input)

prompt(canvas)
#+END_SRC

* Testing

** Create an Image

#+BEGIN_SRC python
import numpy as np
from PIL import Image

# create a 3D numpy array of zeros, then replaced zeros (black pixels) with yellow pixels
data = np.zeros((500, 400, 3), dtype = np.uint8)

data[:] = [0, 0, 0]

# make a red patch
data[100:400, 100:300] = [255, 200, 233]
data[10:200, 100:225] = [45, 200, 33]
data[350:450, 175:300] = [45, 200, 255]

# make a red square
data[100:150, 100:200] = [255, 200, 233]

img = Image.fromarray(data, "RGB")
img.save("canvas.png")

# import color dict and get its values
from color_dict import *

print([*get_color("purple")])
#+END_SRC

** Make Colors

#+BEGIN_SRC python :tangle color_dict.py
colors_dict = {"maroon": (128,0,0),
               "dark red": (139,0,0),
               "brown": (165,42,42),
               "firebrick": (178,34,34),
               "crimson": (220,20,60),
               "red": (255,0,0),
               "tomato": (255,99,71),
               "coral": (255,127,80),
               "indian red": (205,92,92),
               "light coral": (240,128,128),
               "dark salmon": (233,150,122),
               "salmon": (250,128,114),
               "light salmon": (255,160,122),
               "orange red": (255,69,0),
               "dark orange": (255,140,0),
               "orange": (255,165,0),
               "gold": (255,215,0),
               "dark golden rod": (184,134,11),
               "golden rod": (218,165,32),
               "pale golden rod": (238,232,170),
               "dark khaki": (189,183,107),
               "khaki": (240,230,140),
               "olive": (128,128,0),
               "yellow": (255,255,0),
               "yellow green": (154,205,50),
               "dark olive green": (85,107,47),
               "olive drab": (107,142,35),
               "lawn green": (124,252,0),
               "chart reuse": (127,255,0),
               "green yellow": (173,255,47),
               "dark green": (0,100,0),
               "green": (0,128,0),
               "forest green": (34,139,34),
               "lime": (0,255,0),
               "lime green": (50,205,50),
               "light green": (144,238,144),
               "pale green": (152,251,152),
               "dark sea green": (143,188,143),
               "medium spring green": (0,250,154),
               "spring green": (0,255,127),
               "sea green": (46,139,87),
               "medium aqua marine": (102,205,170),
               "medium sea green": (60,179,113),
               "light sea green": (32,178,170),
               "dark slate gray": (47,79,79),
               "teal": (0,128,128),
               "dark cyan": (0,139,139),
               "aqua": (0,255,255),
               "cyan": (0,255,255),
               "light cyan": (224,255,255),
               "dark turquoise": (0,206,209),
               "turquoise": (64,224,208),
               "medium turquoise": (72,209,204),
               "pale turquoise": (175,238,238),
               "aqua marine": (127,255,212),
               "powder blue": (176,224,230),
               "cadet blue": (95,158,160),
               "steel blue": (70,130,180),
               "corn flower blue": (100,149,237),
               "deep sky blue": (0,191,255),
               "dodger blue": (30,144,255),
               "light blue": (173,216,230),
               "sky blue": (135,206,235),
               "light sky blue": (135,206,250),
               "midnight blue": (25,25,112),
               "navy": (0,0,128),
               "dark blue": (0,0,139),
               "medium blue": (0,0,205),
               "blue": (0,0,255),
               "royal blue": (65,105,225),
               "blue violet": (138,43,226),
               "indigo": (75,0,130),
               "dark slate blue": (72,61,139),
               "slate blue": (106,90,205),
               "medium slate blue": (123,104,238),
               "medium purple": (147,112,219),
               "dark magenta": (139,0,139),
               "dark violet": (148,0,211),
               "dark orchid": (153,50,204),
               "medium orchid": (186,85,211),
               "purple": (128,0,128),
               "thistle": (216,191,216),
               "plum": (221,160,221),
               "violet": (238,130,238),
               "magenta / fuchsia": (255,0,255),
               "orchid": (218,112,214),
               "medium violet red": (199,21,133),
               "pale violet red": (219,112,147),
               "deep pink": (255,20,147),
               "hot pink": (255,105,180),
               "light pink": (255,182,193),
               "pink": (255,192,203),
               "antique white": (250,235,215),
               "beige": (245,245,220),
               "bisque": (255,228,196),
               "blanched almond": (255,235,205),
               "wheat": (245,222,179),
               "corn silk": (255,248,220),
               "lemon chiffon": (255,250,205),
               "light golden rod yellow": (250,250,210),
               "light yellow": (255,255,224),
               "saddle brown": (139,69,19),
               "sienna": (160,82,45),
               "chocolate":(210,105,30),
               "peru": (205,133,63),
               "sandy brown": (244,164,96),
               "burly wood": (222,184,135),
               "tan": (210,180,140),
               "rosy brown": (188,143,143),
               "moccasin": (255,228,181),
               "navajo white": (255,222,173),
               "peach puff": (255,218,185),
               "misty rose": (255,228,225),
               "lavender blush": (255,240,245),
               "linen": (250,240,230),
               "old lace": (253,245,230),
               "papaya whip": (255,239,213),
               "sea shell": (255,245,238),
               "mint cream": (245,255,250),
               "slate gray": (112,128,144),
               "light slate gray": (119,136,153),
               "light steel blue": (176,196,222),
               "lavender": (230,230,250),
               "floral white": (255,250,240),
               "alice blue": (240,248,255),
               "ghost white": (248,248,255),
               "honeydew": (240,255,240),
               "ivory": (255,255,240),
               "azure": (240,255,255),
               "snow": (255,250,250),
               "black": (0,0,0),
               "dim gray / dim grey": (105,105,105),
               "gray / grey": (128,128,128),
               "dark gray / dark grey": (169,169,169),
               "silver": (192,192,192),
               "light gray / light grey": (211,211,211),
               "gainsboro": (220,220,220),
               "white smoke": (245,245,245),
               "white": (255,255,255)}

def get_color(color_name):
    try:
        color = colors_dict[color_name]
    except:
        print(f"The color {color_name} could not be found!")
        return None
    return color
#+END_SRC
