#+TITLE: Photo Searcher

A kivy app is made of 4 objects:

- App
- ScreenManager
- Screen
- Widget


#+BEGIN_SRC python :tangle main.py
from kivy.app import App
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.lang import Builder
import wikipedia
import requests


# communicate with frontend.kv
Builder.load_file("frontend.kv")

class FirstScreen(Screen):
    def get_image_link(self):
        # get user query from text input
        query = self.manager.current_screen.ids.txt.text
        print(f"Now searching: {query}\n")

        # get wikipedia page and the first image link
        return wikipedia.page(query).images[0]
        
    def download_image(self):
        # download the image
        image_path = "files/image.png"
        with open(image_path, "wb") as file:
            file.write(requests.get(self.get_image_link()).content)
        return image_path
        
    def set_image(self):
        # place new image in the image bucket
        self.manager.current_screen.ids.img.source = self.download_image()

class RootWidget(ScreenManager):
    pass
    
class MainApp(App):
    def build(self):
        return RootWidget()

MainApp().run()
#+END_SRC

This code defines how the screen looks:

#+BEGIN_SRC kivy :tangle frontend.kv
<FirstScreen>:
    GridLayout:
        cols: 1
        padding: 10
        spacing: 10
        Image:
            id: img
            size_hint_y: 0.80
        TextInput:
            id: txt
            size_hint_y: 0.1
        Button:
            text: "Search Image"
            size_hint_y: 0.1
            on_press: root.set_image()

<RootWidget>:
    FirstScreen:
        id: first_screen
        name: "first_screen"
#+END_SRC


* Testing

** Try out Wikipedia Library

#+BEGIN_SRC python
import wikipedia
import requests

page = wikipedia.page("beach")
link = page.images[0]

# download a file
req = requests.get(link)

print(type(req.content))

with open("the_beach.jpg", "wb") as file:
    file.write(req.content)
#+END_SRC
