* Webcam Photo Sharer

** Design

Title: Webcam Photo Sharer
Description: This is an app that starts with the webcam, let's the user capture a photo and uploads the photo to the web and creates a shareable link.

** Objects
*** Webcam
**** start()
**** stop()
**** capture()
*** FileSharer:
**** filepath
**** api
**** share()

#+BEGIN_SRC python :tangle main.py
from kivy.app import App
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.lang import Builder
from kivy.core.clipboard import Clipboard

from filesharer import FileSharer
import webbrowser
import time

# communicate with frontend.kv
Builder.load_file("frontend.kv")


class CameraScreen(Screen):
    def start(self):
        """Starts the camera and changes the button text"""
        self.ids.camera.Index = -1
        self.ids.camera.play = True
        self.ids.camera_button.text = "Stop Camera"
        self.ids.camera.texture = self.ids.camera._camera.texture


    def stop(self):
        """stops the camera and changes button text"""
        self.ids.camera.play = False
        self.ids.camera_button.text = "Start Camera"
        self.ids.camera.texture = None


    def capture(self):
        """
        Creates a filename with current time.
        Captures an image and saves it with the given filename
        """
        self.filename = "files/" + time.strftime("%Y%m%d-%H%M%S") + ".png"
        self.ids.camera.export_to_png(self.filename)
        self.manager.current = "image_screen"
        self.manager.current_screen.ids.img.source = self.filename


class ImageScreen(Screen):
    link_message = "Create a link first!"

    def create_link(self):
        """
        Accesses the photo filepath, uploads it to the web
        and inserts the link in the label widget
        """
        file_path = App.get_running_app().root.ids.camera_screen.filename
        file_sharer = FileSharer(file_path)
        self.url = file_sharer.share()
        self.ids.link.text = self.url

    def copy_link(self):
        """
        copy link to the clipboard
        """
        try:
            Clipboard.copy(self.url)
        except:
            self.ids.link.text = self.link_message

    def open_link(self):
        """
        Open link with the default browser
        """
        try:
            webbrowser.open(self.url)
        except:
            self.ids.link.text = self.link_message


class RootWidget(ScreenManager):
    pass


class MainApp(App):
    def build(self):
        return RootWidget()


MainApp().run()
#+END_SRC



#+BEGIN_SRC python :tangle filesharer.py
from filestack import Client

class FileSharer:
    def __init__(self, filepath, api_key = "AViVqp7suSQWWEdrl6hf9z"):
        self.filepath = filepath
        self.api_key = api_key

    def share(self):
        client = Client(self.api_key)
        new_filelink = client.upload(filepath = self.filepath)
        return new_filelink.url
#+END_SRC


#+BEGIN_SRC kivy :tangle frontend.kv
<CameraScreen>:
    GridLayout:
        cols: 1
        padding: 10
        spacing: 10
        Camera:
            id: camera
            play: False
            size_hint_y: 0.8
        Button:
            id: camera_button
            text: "Start Camera"
            on_press: root.start() if root.ids.camera.play == False else root.stop()
            size_hint_y: 0.1
        Button:
            id: capture_button
            text: "Capture"
            on_press: root.capture()
            size_hint_y: 0.1


<ImageScreen>:
    padding: 10
    spacing: 10
    GridLayout:
        cols: 1
        Image:
            id: img
            size_hint_y: 0.7
        Button:
            text: "Create Shareable Link"
            on_press: root.create_link()
            size_hint_y: 0.1
        Label:
            id: link
            text: ""
            size_hint_y: 0.1
        GridLayout:
            cols: 2
            size_hint_y: 0.1
            Button:
                text: "Copy Link"
                on_press: root.copy_link()
            Button:
                text: "Open Link"
                on_press: root.open_link()


<RootWidget>:
    CameraScreen:
        id: camera_screen
        name: "camera_screen"
    ImageScreen:
        id: image_screen
        name: "image_screen"
#+END_SRC


* Scratch

This was an attempt to try to get the index for a plugin usb web cam. I had hoped to use that as a default.

I still have not gotten kivy to correctly use the usb webcam instead of the builtin webcam.

#+BEGIN_SRC python
# import cv2
# def find_camera_index():
#     index = 0
#     arr = []
#     while True:
#         cap = cv2.VideoCapture(index)
#         if not cap.read()[0]:
#             break
#         else:
#             arr.append(index)
#             cap.release()
#             index += 1
#     return arr

# def returnCameraIndexes():
#     # checks the first 10 indexes.
#     index = 0
#     arr = []
#     i = 10
#     while i > 0:
#         cap = cv2.VideoCapture(index)
#         if cap.read()[0]:
#             arr.append(index)
#             print(index)
#             cap.release()
#         index += 1
#         i -= 1
#     return arr


# print(returnCameraIndexes())
#+END_SRC
